---
- name: Install Xen Orchestra from the sources
  hosts: xen_orchestra
  vars:
    NODEJS_VERSION: node_12.x

  tasks:
    # Install NodeJS
    - name: Install GPG
      become: true
      apt:
        name: gpg
        state: present
    - name: Install GPG key for NodeSource NodeJS APT Repo
      become: true
      apt_key:
        url: https://deb.nodesource.com/gpgkey/nodesource.gpg.key
        state: present
    - name: Install the NodeSource NodeJS APT Repo
      become: true
      apt_repository:
        repo: "deb https://deb.nodesource.com/{{ NODEJS_VERSION }} {{ ansible_distribution_release }} main"
        state: present
        update_cache: true
    - name: Install NodeJS
      become: true
      apt:
        name: nodejs
        state: present
    # Install Yarn
    - name: Install GPG key for Yarn APT Repo
      become: true
      apt_key:
        url: https://dl.yarnpkg.com/debian/pubkey.gpg
        state: present
    - name: Install the Yarn APT Repo
      become: true
      apt_repository:
        repo: "deb https://dl.yarnpkg.com/debian/ stable main"
        state: present
        update_cache: true
    - name: Install Yarn
      become: true
      apt:
        name: yarn
        state: present
    # Install Xen Orchestra's dependencies
    - name: Install Xen Orchestra Dependencies
      become: true
      apt:
        pkg:
          - build-essential
          - redis-server
          - libpng-dev
          - git
          - python-minimal
          - libvhdi-utils
          - lvm2
          - cifs-utils
        state: present
    # Get the sources
    - name: Fetch the sources
      git:
        repo: http://github.com/vatesfr/xen-orchestra
        version: master
        dest: /home/debian/xen-orchestra
    # Install NPM dependencies if they don't already exist
    - name: Check if npm dependencies are already installed
      stat:
        path: /home/debian/xen-orchestra/node_modules/
      register: node_modules
    - name: Install NPM dependencies
      community.general.yarn:
        path: /home/debian/xen-orchestra
      when: not node_modules.stat.exists
    # Build Xen Orchestra if it hasn't already been built
    - name: Check if xo-server has been built
      stat:
        path: /home/debian/xen-orchestra/packages/xo-server/dist/
      register: xo_server_dist
    - name: Build Xen Orchestra
      command:
        chdir: /home/debian/xen-orchestra
        cmd: yarn build
      when: not xo_server_dist.stat.exists
    # Copy the default Xen Orchestra config file
    - name: Create config directory
      become: true
      file:
        path: /etc/xo-server/
        state: directory
    - name: Copy Xen Orchestra config file
      become: true
      copy:
        src: /home/debian/xen-orchestra/packages/xo-server/sample.config.toml
        dest: /etc/xo-server/config.toml
        remote_src: true
        force: no
    # Setup Xen Orchestra to run as a system service
    - name: Install "forever" node.js package globally.
      become: true
      community.general.yarn:
        name: forever
        global: yes
    - name: Install "forever-service" node.js package globally.
      become: true
      community.general.yarn:
        name: forever-service
        global: yes
    - name: Make Xen Orchestra into a service with `forever-service`
      become: true
      command:
        chdir: /home/debian/xen-orchestra/packages/xo-server/bin/
        cmd: forever-service install xen-orchestra -r root -s xo-server
    # Enable the service and start it now
    - name: Enable and start the service
      become: true
      systemd:
        name: xen-orchestra.service
        state: started
        enabled: true